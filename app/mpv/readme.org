#+STARTUP: showeverything indent

file:../mpv/readme.org file:../espeak/readme.org file:../okular/readme.org
file:/home/thinkpad/Desktop/pdf_list_of_desktop.org
- list를 만들어서 실행할 수있는법이 있는가 찾아볼것. Music/_1_list.org에서 사용하면 좋을 것같다.
"1번파일 1번파일 1번파일 2번파일 2번파일 2번파일 3번파일 3번파일 3번파일"
3번씩 반복해서 연습의 강도와 변화를 동시에 준다.
[[inode 추출법]]
[[bbg]] 성공적임. 
[[*%EB%B0%94%EB%A1%9C%EC%9C%84%EB%A5%BC %EC%9E%AC%EC%83%9D%ED%95%98%EB%8A%94 %ED%81%B4%EB%A6%AD%EC%8B%A4%ED%96%89][바로위를 재생하는 클릭실행]]
실험중임 [[*%EA%B0%95%EC%9D%98%EB%93%A3%EA%B8%B0%EC%9A%A9 property%EC%B6%94%EC%B6%9C %EC%82%AC%EC%9A%A9%EC%8B%A4%ED%96%89%EB%B2%951-ggb %EB%93%B1%EC%97%90 %EC%A0%81%EC%9A%A9%ED%95%A0 %EA%B2%83%EC%9E%84][강의듣기용 property추출 사용실행법1-ggb 등에 적용할 것임]]


:기억하고_누르고즉시관찰실험하라!:
#+begin_text org :최종목적은 process중단이 간략히 진행됨이 성공함.
app/emacs/process.org espeak, mpv diary (delete-process (get-process "while true espeak greek latin"))
#+end_text org
:end:


#+NAME: test
* mpv 구간 반복의 프로세스를 만들어 완성하고 시도할 것.
- 전제: 멀티텀의 설치할 것.

- 멀티터미널을 한가지를 다른 창에 실행함.
- 액티베이트하든지 만든지 일단 버퍼이름을 얻어냄
- 원하는 명령을 스트로크로 전달함.
- 원래의 노트로 자리 복귀함.

- 아이노드번호를 사용하면 매우 유동적인 파일위치 변경이 가능할 것이다.
	- 아이노드 번호 얻기의 방법을 만들어 파일로 정리할 것.
	- mpv의 반복구간 실행을 찾아 둘 것. 



    ;; 반복적 과정을 매우 효과적으로 강화하는 리엔지니어링의 과정이다. steve_jobs
    (async-shell-command "mpv ~/Music/St* --ab-loop-a=1:58 --ab-loop-b=2:08 --start=1:53 --volume=39 --player-operation-mode=pseudo-gui")
;; dired 에서 실행하는 법 &로 async로 실행함 그리고 mpv --ab-loop-a=1:58 --ab-loop-b=2:08 --start=1:53 --volume=39 --player-operation-mode=pseudo-gui 를 붙여서 실행하는 것을 만듬. 즉, 위의 명령과 완전히 동일함.

    (async-shell-command "mpv ~/Music/St* --ab-loop-a=1:58 --ab-loop-b=2:08 --start=1:53 --volume=39 --profile=pseudo-gui &>/dev/null &")

;; 반복적 과정을 매우 효과적으로 강화하는 리엔지니어링의 과정이다. steve_jobs
(async-shell-command "mpv ~/Music/St* --start=1:53 --ab-loop-a=1:58 --ab-loop-b=2:08 --volume=39")


(find-file-other-window "~/config_github/app/mpv/readme.org") ;; 이 파일을 여는 방식을 diary.org 다른 곳에서도 붙여서 사용할 것


(async-shell-command "mpv \"$(find ~/Music  -inum 6960041)\" &") ;; /home/thinkpad/Music/test_mp3/Napoleon Hill/✦Full AudioBook.mp3 # Arco linux

(async-shell-command "mpv --start=2:34:50 --ab-loop-a=2:34:56 --ab-loop-b=2:35:00 \"$(find ~/Music  -inum 6960041)\" &") ;;
                     ;; /home/thinkpad/Music/test_mp3/Napoleon Hill/✦Full AudioBook.mp3 # Arco linux


(start-process-shell-command "timeout 1m Outwitting Devil excerpt" nil 
    (concat "timeout 15s "
            "mpv --player-operation-mode=pseudo-gui --speed=.75 "
            "    --start=2:34:50 --ab-loop-a=2:34:56 --ab-loop-b=2:35:00 "
            "\"$\(find ~/Music  -inum 6960041\)\"" )
)

# [주요사용방법 bbg] time많은 리스트를 만들어 쉽게 노트를 작성한다.
    /python/link_list_drawer_generate_python_babel.org
        (async-shell-command "mpv --start=2:34:50 --ab-loop-a=2:34:56 --ab-loop-b=2:35:00 \"$(find ~/Music  -inum 6960041)\" &") ;;
                     ;; /home/thinkpad/Music/test_mp3/Napoleon Hill/✦Full AudioBook.mp3 # Arco linux

* timeout CMD BEST for clear method
$ timeout 15m mpv --player-operation-mode=pseudo-gui ../homer_rhythm/iliad01/line_009.mp4 &
(start-process-shell-command "timeout 15m mpv Homer Iliad" nil 
    (concat "timeout 15m "
            "mpv --player-operation-mode=pseudo-gui --speed=.75 " 
            "~/Music/homer_rhythm/iliad01/line_010.mp4" )
)



(start-process-shell-command "timeout 15m mpv Homer Iliad" nil "
timeout 15m mpv --player-operation-mode=pseudo-gui ~/Music/homer_rhythm/iliad01/line_010.mp4
")


* inode 추출법
ls_inode_fs/inode.org => okular, mpv/readme.org
요약: (car  (nthcdr 10 (file-attributes "~/config_github/app/mpv/readme.org"))  )
(car 
    (nthcdr 10 (file-attributes buffer-file-name))
)
    (nthcdr 10 (file-attributes "/home/thinkpad/config_github/app/mpv/readme.org"))
(car  (nthcdr 10 (file-attributes "~/config_github/app/mpv/readme.org"))  )

(car 
    (nthcdr 10 (file-attributes ;;buffer-file-name
        "~/Music/homer_rhythm/iliad01/line_010.mp4"))
)

* TODO list to generate drawer
(find-file "./test_acro_list_drawer_mpv.org")


* inode를 사용한 방법과 파일 위치검색을 넣어 둘 것.
- /app/mpv/test_inode_mpv.org 에 노트한 것을 정리해서 적어 둘 것.
    (find-file-other-window "./test_inode_mpv.org")

(rgrep "단어_들" "*.org" "~/config_github/app" nil)
(find-grep "find ~/config_github/app -type f -exec grep --color -nH --null -e 단어_들 \{\} +")

(rgrep "incognito" "*.org" "~/config_github" nil)
(async-shell-command "brave --incognito 'https://www.youtube.com/watch?v=IggY48vEe2w&t=11m'")


(car buffer-file-number)
3282990

(file-attributes buffer-file-name)
 file-attributes 를 files.el에서 발견함 from help:buffer-file-number
    (setq buffer-file-number
	  (if filename
	      (nthcdr 10 (file-attributes buffer-file-name))
	    nil))


* [2019-11-10 Sun 09:24] How to find file by inode number » Linux Ask! | Linux Ask! :grasp:
http://www.linuxask.com/questions/how-to-find-file-by-inode-number
Selection:
To find a file by its inode number, you can use the argument -inum with the find command. e.g.

# find -inum 8232976
./test.txt
./hard_link.txt
* [2019-11-10 Sun 09:28]  (async-shell-command "okular \"$(find ~/Music  -inum 6836311)\" &")
(async-shell-command "okular \"$(find ~/Music  -inum 6836311)\" &") c - How can I access file by inode on Linux - Stack Overflow
https://stackoverflow.com/questions/31428641/how-can-i-access-file-by-inode-on-linux/31432662#31432662
Selection:
2

I found the question connected concerning similar topic here.

Summarizing, check out those commands:

find /path/to/mountpoint -inum <inode number>
sudo debugfs -R 'ncheck 393094' /dev/sdaX 2>/dev/null




* Playback Control
--ab-loop-a=<time>, --ab-loop-b=<time> ; 반복은 이렇게
 --start=<relative time> ; 시작은 여유를 3초정도 두고서 시작함
[+|-][[hh:]mm:]ss[.ms]
pp% seeks to percent position pp (0-100)

 --start=-3:20 --length=10
--end=<relative time> Stop at given time. Use 
--length=<relative time>
--length if the time should be relative to --start.


--volume=<value>
              Set  the startup volume. 0 means silence, 100 means no volume reduction or amplification. Negative values can be passed for compati‐
              bility, but are treated as 0.


--speed=<0.01-100>
              Slow down or speed up playback by the factor given as parameter.

              If --audio-pitch-correction (on by default)  is  used,  playing  with  a
              speed higher than normal automatically inserts the scaletempo audio fil‐
              ter.
--pause
              Start the player in paused state.
--pp로 1%씩 늘려가는 법을 사용할 수도 있다.

읽은 횟수/듣기만한 횟수를 기록할 것.
(async-shell-command "mpv \"~/Music/bellumgallicum_caesar/bellumgallicum_02_caesar_64kb.mp3\"")
(async-shell-command "mpv --player-operation-mode=pseudo-gui '/home/thinkpad/Music/bellumgallicum_caesar/bellumgallicum_02_caesar_64kb.mp3'") 
(async-shell-command "mpv --player-operation-mode=pseudo-gui '/home/thinkpad/Music/bellumgallicum_caesar/bellumgallicum_02_caesar_64kb.mp3'")  ;; 읽은 횟수/듣기만한 횟수
(async-shell-command "mpv --player-operation-mode=pseudo-gui '/home/thinkpad/Music/bellumgallicum_caesar/bellumgallicum_02_caesar_64kb.mp3'")  ;; 1 / 2
(async-shell-command "mpv --player-operation-mode=pseudo-gui '/home/thinkpad/Music/bellumgallicum_caesar/bellumgallicum_02_caesar_64kb.mp3'") 
--player-operation-mode=pseudo-gui
--player-operation-mode=<cplayer|pseudo-gui>



* [활용처] link_list_drawer_generate_python_babel.org
(find-file-other-window "../../language_computer/python/link_list_drawer_generate_python_babel.org")
brave --incognito의 많은 링커를 생성한다.
mpv
okular (async-shell-command "okular \"$(find ~/Music  -inum 6836311)\" &")
(3282990 2049)



* bbg

#+BEGIN_SRC emacs-lisp :results silent
;;; 사실상통일함.

(start-process "timeout" nil "timeout" "60m" "mpv" "--speed=1" "--volume=80" "--player-operation-mode=pseudo-gui"
"/home/thinkpad/Music/nicholas_youtube/latin/quidam, quaedam, quiddam-Zf4oJw1VRdA.mkv"
"--start=3:30" "--ab-loop-a=3:30" "--ab-loop-b=4:03")
; 간결한 완성!
#+END_SRC 


#+BEGIN_SRC elisp :results silent
;(bbg_mpv)
    ; (bbg_mpv  "bbg_cd2_ch08_vts_03_2.mp4" "25" "1" "30")
(defun bbg_mpv ( a1                          a2   a3  a4 )
"
성공적임.
"
(start-process-shell-command (concat "timeout " a2 "m " a1) nil 
        (concat "timeout " a2 "m "  "mpv --player-operation-mode=pseudo-gui --speed=" a3 " --volume=" a4 " " foler_prefix_name  a1 "")
)
)


    ; (bbg_mpv0  "bbg_cd2_ch08_vts_03_2.mp4" " timeout 25m " " --speed=2 " " --volume=60 ")
(defun bbg_mpv0 ( a1                          a2   a3  a4 )
"

"
(start-process-shell-command (concat a2 " " a1) nil 
        (concat a2 " mpv --player-operation-mode=pseudo-gui " a3  a4 " " foler_prefix_name  a1 "")
)
)


    ; (bbg_mpv-R  "bbg_cd2_ch08_vts_03_2.mp4" "timeout 25m " "--speed=1 " "--volume=60 " "--ab-loop-a=1:58 --ab-loop-b=2:08 --start=1:53 ")
(defun bbg_mpv-R ( a1                          a2             a3           a4             a5)
"

"
(start-process-shell-command (concat a2 " " a1) nil 
        (concat a2 " mpv --player-operation-mode=pseudo-gui " a3 a4 a5 " " foler_prefix_name  a1 "")
)
)


#+END_SRC

* 바로위를 재생하는 클릭실행
#+NAME: 바로위를 재생하는 클릭실행
(buffer-substring-no-properties (line-beginning-position 0) (line-end-position 0))
/home/thinkpad/Music/mpv_files/2_ncs_deemo_Reflection.webm
[[elisp:(start-process%20"timeout"%20nil%20"timeout"%20"25m"%20"mpv"%20"--speed=0.8"%20"--volume=25"%20"--player-operation-mode=pseudo-gui"%20(buffer-substring-no-properties%20(line-beginning-position%200)%20(line-end-position%200)))][바로위를 재생함25분 "없이 파일명, 0.8speed 25vol]]


/home/thinkpad/Music/mpv_files/2_ncs_deemo_Reflection.webm
[[elisp:(start-process%20"timeout"%20nil%20"timeout"%20"25m"%20"mpv"%20"--speed=0.8"%20"--volume=25"%20"--player-operation-mode=pseudo-gui"%20(buffer-substring-no-properties%20(line-beginning-position%200)%20(line-end-position%200)))][바로위를 재생함25분 "없이 파일명, 0.8speed 25vol]]
[[


#+NAME: 바로위를_재생하는_클릭실행

#+NAME: CLICK_without_;_above_fileNAME


* 강의듣기용 property추출 사용실행법1-ggb 등에 적용할 것임
   :PROPERTIES:
   :Effort:   3
   :process_name: good test
   :timeout_0: timeout
   :timeout_m: 25m
   :mpv_0:    mpv
   :mpv_s:    --speed=0.8
   :mpv_v:    --volume=25
   :mpv_m:    --player-operation-mode=pseudo-gui
   :file_mpv:     /home/thinkpad/Music/mpv_files/流星のナミダ ORCH-VER(Gundam Unicorn OST 4 - 09. 9thMob).mp3
   :set_1:    "good world"
   :set_2:    "timeout" "25m" "mpv" "--speed=0.8" "--volume=25" "--player-operation-mode=pseudo-gui"
   :set_3:    timeout 25m mpv --speed=0.8 --volume=25 --player-operation-mode=pseudo-gui
   :set3:     afe sdf
   :mpv:      /home/thinkpad/latin/   greek/
   :END:

(org-set-property "set_2" (buffer-substring-no-properties (line-beginning-position 0) (line-end-position 0)))
"timeout" "25m" "mpv" "--speed=0.8" "--volume=25" "--player-operation-mode=pseudo-gui"
#+name: mpv_above
#+BEGIN_SRC emacs-lisp :results silent
(let ((time_a_b (split-string (buffer-substring-no-properties (line-beginning-position 0) (line-end-position 0)))))
(start-process 
    (car (org-property-values "process_name"))
    nil
    (car (org-property-values "timeout_0"))   
    (car (org-property-values "timeout_m"))   
    (car (org-property-values "mpv_0"))       
    (car (org-property-values "mpv_s"))       
    (car (org-property-values "mpv_v"))       
    (car (org-property-values "mpv_m"))       
    (car (org-property-values "file_mpv"))    
    (nth 0 time_a_b) (nth 1 time_a_b) (nth 2 time_a_b)
)
) ;; "필요없음 바로위를 재생함
#+END_SRC
hello world good
(nth 2 (split-string (buffer-substring-no-properties (line-beginning-position 0) (line-end-position 0))))
(setq time_0 (split-string (buffer-substring-no-properties (line-beginning-position 0) (line-end-position 0)))

)
hi]]

/home/thinkpad/Music/mpv_files/流星のナミダ ORCH-VER(Gundam Unicorn OST 4 - 09. 9thMob).mp3
--start=1:00
--start=1:00 --ab-loop-a=1:01 --ab-loop-b=1:03
#+call: mpv_above()


(start-process "timeout" nil "timeout" "25m" "mpv" "--speed=0.8" "--volume=25" "--player-operation-mode=pseudo-gui" (buffer-substring-no-properties (line-beginning-position 0) (line-end-position 0))) ;; "필요없음 바로위를 재생함
#+constants: a=3
#+NAME: hi
 (car (org-property-values "mpv"))   ;; 이것이 추출에 성공함
- help:org-property-values (org-property-value "Effort")
 (car (org-property-values "file_ggb"))
(org-set-property "set_1" "good world") ;; 이것이 입력에 성공함
(mapcar (lambda (arg) (eval-expression arg nil nil 127)) 
'set-3
;'( "1" "2" "3" )
)
(split-string (car (org-property-values "set_3")))
  (car (org-property-values "set_3"))
(setq set-3 (split-string (car (org-property-values "set_3"))))   ;; 이것이 추출에 성공함
(mapcar 'eval-expression '("hi" "world")) (string-trim '("hi" "world")) nil nil 127)

(org-set-property PROPERTY VALUE)
(org-set-property "set3" "afe sdf")

(org-read-property-value PROPERTY)
(org-read-property-value "mpv")
(org-read-property-value "Effort")


"--start=15:00"        "--start=5:00" "--ab-loop-a=15:00" "--ab-loop-b=15:33")
       ;;;   ;;;   ;;;   ;;;   ;;;   ;;;   ;;;   ;;;   ;;;   ;;; ;바로 찍고 노트메모하고 시간반복수정한 다음에 올릴 것
"--start=16:00" "--ab-loop-a=16:00" "--ab-loop-b=16:33")


help:lax-plist-put
help:let-alist
help:list
help:list-abbrevs
help:list-at-point
help:list-block-of-chars
help:list-bookmarks
help:list-buffers
help:list-buffers--refresh
help:list-buffers-noselect
help:list-registers
(list-buffers)
(list-registers)
(list-bookmarks)

(mapcar 'print '("hi" 1 2 3))("hi" 1 2 3)
(split-string "hi 1 2 3")
(print "hi")"hi"
("hi" 1 2 3)

(mapc 'print-list '("hi" 1 2 3))("hi" 1 2 3)
(mapcar 'print-list '("hi" 1 2 3))("
" "
" "
" "
")
help:cdr


split-string (info "(elisp) Creating Strings")
help:split-string

(split-string "jkj kjk kjkj")
