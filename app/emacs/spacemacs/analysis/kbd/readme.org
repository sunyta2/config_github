이곳에 일단 분류된 키보드 단축목록을 수집한다.
(read-file 
요점을 추리고 핵심동작음 만든다음 적용을 시도한다.


*** DWM Emacs의 창관리기법은 dwm에서
*** C-u C-SPC 이전의 포인터마커위치를 이동함
 C-u C-SPC  jump the cursor to a saved mark by typing C-u C-h SPC
C-- C-d는 Backspace를 대체할 방법으로 사용하던 C-b C-d의 대안이다.
포인터 위치의 저장과 재방문이 용이한 기능으로 생각된다.

* 매우 유용한 기능과 찾아야 하는 기능
- 매우 유용한 기능(연습할 것)
C-s C-M-y한글자씩검색전진 C-M-w한글자씩검색후진
C-s C-w C-w ... 단어위주의 검색
C-s M-s C-e ... 잘 모르겠음 검색이 필요함. 특이한 기능인 듯함.


M-g M-g 줄이동
M-g c 칼럼이동

- 옆의 윈도우의 줄이동 [[https://www.emacswiki.org/emacs/Reference_Sheet_by_Aaron_Hawley][웹사이트 유용합!!! emacs/Reference_Sheet_by_Aaron_Hawley !!!]]
C-u 1      C-v : 자기 윈도우 이동
C-u 1 C-[  C-v : 다른 윈도우 이동은 ESC,즉C-[로 가능함
               :   이후 반복으로 C-x z (repeat) cf) C-x C-[ C-[ / C-x M-: (repeat-complex-command)
               :    다시 반복으로 C-u 3 C-x z(3회반복)
               : !! 이맥스의 놀라운 창의적인 건축기법에 감탄!!!

(command-history) C-x C-[ C-[ repeat-complex-command 
명령유래 M-p M-n  C-x M-:     {cf. M-: eval or M-& M-! Shell command}

C-x x == M-x
C-x m == M-m in spacemacs

- 찾아야 하는 기능(검색법을 기록할 것)
C-M-r !!! C-M-s가 안되지만, !!!
C-s M-r 예시 C.x로 C-x검색되는 놀라움!!!
C-s  단어검색 중에 변경시 M-e
C-space {f{character} in VIM}} == C-s C-m 
화려한 결합의 향연아이디어: C-s M-r C-s 이전 검색복귀. M-e편집가능함.



(switch-to-buffer "readme.org" nil (quote force-same-window))

C-x [ gg
C-x ] G in Vim


- (find-name-dired)
find 검색을 터미널처럼하는 것이 중요함
- (find-grep-dired)


중요- 검색의 법을 설명한 것  $ info find.info 'Reference' 'Regular Expressions' 'emacs regular expression'
드디어 잘 실행됨!  (find-dired "~/config_github/" "-iname *read*")
- /home/thinkpad/config_github/app/tmux/README.txt 
/home/thinkpad/config_github/app/feh/readme.org 
/home/thinkpad/config_github/app/wifi_network/readme.org 
/home/thinkpad/config_github/app/cmus/README.txt /home/thinkpad/config_github/app/vifm/scripts/README /home/thinkpad/config_github/app/xorg_X11/pulsemixer/README.org /home/thinkpad/config_github/app/xorg_X11/xsessions_folder/README.org /home/thinkpad/config_github/app/xorg_X11/macosx_x11/README.txt
m m m ... 으로 선택하고 0 w로 주소를 복사하고 U로 unmark함.
파일명변경하기in Dired C-x C-q(dired-toggle-read-only) Wdired
C-c C-c (wdired-finish-edit) [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Wdired.html#Wdired][<Wdired 사이트출처>]]


?? 어떻게 선택된 파일에서 
(검색명령어 "선택파일...... 들" "검색단어")
(lgrep "명령" "*.org" "~/config_github/app/emacs/spacemacs/analysis/kbd/" nil)

파일명자동완성의 명령어 Vim의 C-x C-f와 같은 것이 있으면 편리할 것임.


(defun dired-do-eshell-command (command)
  "Run an Eshell command on the marked files."
  (interactive "sEshell command: ")
  (let ((files (dired-get-marked-files t)))
    (eshell-command
     (format "%s %s" command (mapconcat #'identity files " ")))))

dired-do-eshell-command RET grep -nH --color your-search--pattern RET


* kbd collect by prefix

* C-c -(1 of 3) [C-h paging/help]
[[file:./C-c_.org][./C-c_.org]]
C-c- -(1 of 3) [C-h paging/help]
ESC -> +prefix
RET -> org-ctrl-c-ret
SPC -> org-table-blank-field
TAB -> org-ctrl-c-tab
  ! -> org-time-stamp-inactive
  " -> +prefix
  # -> org-update-statistics-cookies
  $ -> org-archive-subtree
  % -> org-mark-ring-push
  & -> org-mark-ring-goto
  ' ->org-edit-special
  * -> org-ctrl-c-star
  + -> org-table-sum
  , -> org-proority
  - -> org-ctrl-c-minus
  . -> org-time-stamp
  / -> org-sparse-tree
  : -> org-toggle-fixed-width
  ; -> org-toggle-comment
  < -> org-goto-calendar
  ? -> org-table-field-info
  @ -> org-mark-subtree
  [ -> org-agenda-file-to-front
  \ -> org-match-sparse-tree
  ] -> org-remove-file
  ^ -> org-sort
  ` -> org-table-edit-field
  p -> +persp-key-map
  { -> org-table-toggle-formula-debugge..
  | -> org-table-create-or-convert-from..
  } -> org-table-toggle-coordinate-over..
  - -> org-table-create-with-table.el
C-* -> org-list-make-subtree
C-, -> org-insert-structure-template
C-< -> outline-promote
C-> -> outline-demote		;; m-RIGHT 가 동일한 것인지?
C-^ -> org-up-element
C-_ -> org-down-element
C-a -> org-attach
C-b -> org-backward-heading-same-level
C-c -> org-ctrl-c-ctrl-c
C-d -> org-deadline
C-e -> org-export-dispatch
C-f -> org-forward-heading-same-level
C-j -> org-goto
C-k -> org-kill-note-or-show-branches
C-l -> org-insert-link
C-n -> outline-next-visible-heading
C-o -> org-open-at-point
C-p -> outline-previous-visible-heading
C-q -> org-set-tags-command
C-r -> org-reveal
C-s -> org-schedule
C-t -> org-todo
C-u -> outline-up-heading
C-v -> +prefix
C-w -> +prefix
C-x -> +prefix
C-y -> org-evaluate-time-range
C-z -> org-add-note
C-M-l  org-insert-all-links
M-b -> org-previous-block
M-f -> org-next-block
M-l -> org-insert-last-stored-link
M-w -> org-copy
LEFT   winner-undo
RIGHT  winner-redo

[[file:./C-c_C-v.org][./C-c_C-v.org]]



* C-x-(1 of 3) [C-h paging/help]
[[file:./C-x_.org][./C-x_.org]]
C-x-(1 of 3) [C-h paging/help]
DEL -> backward-kill-sentence
ESC -> +prefix
       +ESC(C-[도 동일함)
            ESC -> repeat-complex-command
RET -> +prefix
       +RET(C-m도 동일함)
              c -> universal-coding-system-argument
              F -> set-file-name-coding-system
              f -> set-buffer-file-coding-system
              k -> set-keyboard-coding-system
              l -> set-language-environment
              p -> set-buffer-process-coding-system
              r -> revert-buffer-with-coding-system
              t -> set-terminal-coding-system
              X -> set-next-selection-coding-system
              x -> set-selection-coding-system
            C-\ -> set-input-method
SPC -> rectangle-mark-mode
TAB -> indent-rigidly
  # -> server-edit
  $ -> set-selective-display
  ' -> expand-abbrev
  ( -> kmacro-start-macro
  ) -> kmacro-end-macro
  * -> calc-dispatch
  + -> balance-windows
  - -> shrink-window-if-larger-than-buf..
  . -> set-fill-prefix
  0 -> delete-window
  1 -> maximize-buffer
  2 -> split-window-below
  3 -> split-window-right
  4 -> +ctl-x-4-prefix
  5 -> +ctl-x-5-prefix
  6 -> +2C-command
  8 -> +prefix
  ; -> comment-set-column
  < -> scroll-left
  = -> what-cursor-position
  > -> scroll-right
  @ -> +prefix
  [ -> backward-page
  ] -> forward-page
  ^ -> enlarge-window		;; C-- (C-)3 C-x ^축소됨을 확인함.C-x z반복
  ` -> next-error
  a -> +prefix
  b -> helm-buffers-list
  d -> dired
  e -> kmacro-end-and-call-macro
  f -> set-fill-column
  h -> mark-whole-buffer
  i -> insert-file
  k -> kill-buffer
  l -> count-lines-page
  m -> compose-mail
  n -> +prefix
  o -> other-window
  q -> kbd-macro-query
  r -> +prefix
  s -> save-some-buffers
  u -> undo-tree-visualize
  v -> +vc-prefix-map
  w -> +prefix
  X -> +prefix
  z -> repeak		;; 일종의 vim의 . command
  { -> shrink-window-horizontally
  } -> enlarge-window-horizontally
C-SPC >pop-global-mark
C-+ -> text-scale-adjust
C-- -> text-scale-adjust
C-0 -> text-scale-adjust
C-; -> comment-line
C-@ -> pop-global-mark
C-b -> list-buffers
C-c -> save-buffers-kill-terminal
C-d -> list-directory
C-e -> eval-last-sexp
C-f -> helm-find-files
C-j -> dired-jump
C-k -> +kmacro-keymap
C-l -> downcase-region
C-n -> set-goal-column		;; 혹시 Vim의 붉은 세로줄역할??
C-o -> delete-blank-lines
C-p -> mark-page
C-q -> read-only-mode		;; 읽기모드로 파일보호
C-r -> find-file-read-only
C-s -> save-buffer
C-t -> transpose-lines
C-u -> upcase-region
C-v -> find-alternate-file
C-w -> write-file
C-x -> exchange-point-and-mark
C-z -> suspend-frame
C-left previous-buffer
C-rightnext-buffer
left-> previous-buffer
right  next-buffer

[[file:./C-x_.org][./C-x_.org]]


* inbox in Website
15.1 Completion
Org has in-buffer completions. Unlike minibuffer completions, which are useful for quick command interactions, Org’s in-buffer completions are more suitable for content creation in Org documents. Type one or more letters and invoke the hot key to complete the text in-place. Depending on the context and the keys, Org offers different types of completions. No minibuffer is involved. Such mode-specific hot keys have become an integral part of Emacs and Org provides several shortcuts.

M-TAB [[https://orgmode.org/manual/Completion.html][15.1 Completion-emacs manual in WEB site]]
예시 \, * : [ #+ STARTUP

- 기본기를 익히는 매뉴얼이다 중요함[Moving Point - GNU Emacs Manual](https://www.gnu.org/software/emacs/manual/html_node/emacs/Moving-Point.html)
   - 기초동작외에 M-g c    M-g <tab>


* [2019-11-09 Sat 07:53]C-h ? l keyboard stroke history!!! 늘 배움의 실천. 
* %(in vim) C-M-{Left|Right}
* (call-process neo-default-system-application nil 0 nil
                "/home/thinkpad/Music/Gentoo Install Guide 4_5-ZiO75hTbs7w.mkv")
* 이전의 종이 노트한 것을 옮긴다.
M-| 또는 C-u M-| 
드디어 발견함.
2     1
3 --> 2 C-u M-| sort 엔터
1     3
Sardi-Arc [GTK2
M-g M-g 또는 g 줄로 이동하기 
M-x view-lossage ;;입력의 기록을 보는 것임. 검색해서 실시간을 찾아볼것.
C-; comment가 아니라 iedit.el로 설정되어 있음. 동시변환의 기능으로 영역설정후 원하는 것 일괄동시 변경함.
cua-mode연구필요함.
abcdefg

(buffer-file-name)"/home/thinkpad/config_github/app/emacs/spacemacs/analysis/kbd/readme.org"
* WORKFLOW 워크플로우 EMACS 
** emacs를 띄움창으로 두고 사용한다. 다른 곳으로 자유롭게 옮기는 구조로 한다.
