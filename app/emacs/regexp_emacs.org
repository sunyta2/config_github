[[https://www.johndcook.com/blog/2018/01/27/emacs-features-that-use-regular-expressions/][Uses of regular expressions in Emacs 매우 제한적인 범주임 펄과 파이썬에 비하여]]


* regex연구는 검색의 중요한 핵심으로 반드시 고도의 이해력이 뒷받침되어야 
능률적인 검색을 가능하게 하는 것으로 생각된다.
특히 변환에 능한 구조를 익히도록 할 것.

** 연구방도
(info "(emacs) Regexps") → (info "(elisp) Regular Expressions")

* 최고의 활용처
- occur

- 키친의 동영상에서 보이는 자동으로 읽어서 변환하는 것이 가능한 기초력.

* 참고로 볼 것.



** (info "(dired-x) Omitting Examples")
.file ~파일을 보이지 않게 깔끔히 정리할 목적의 수집,
단 일단 정규식연구로 모아 둘 것. (info "(dired-x) Omitting Variables")
#+BEGIN_SRC emacs-lisp



          (setq dired-omit-files
                (concat dired-omit-files "\\|^RCS$\\|,v$"))

     in the ‘dired-load-hook’ (*note Installation::).  This assumes
     ‘dired-omit-localp’ has its default value of ‘no-dir’ to make the
     ‘^’-anchored matches work.  As a slower alternative, with
     ‘dired-omit-localp’ set to ‘nil’, you can use ‘/’ instead of ‘^’ in
     the regexp.

   • If you use ‘tib’, the bibliography program for use with TeX and
     LaTeX, and you want to omit the ‘INDEX’ and the ‘*-t.tex’ files,
     then put

          (setq dired-omit-files
                (concat dired-omit-files "\\|^INDEX$\\|-t\\.tex$"))

     in the ‘dired-load-hook’ (*note Installation::).

   • If you do not wish to see ‘dot’ files (files starting with a ‘.’),
     then put

          (setq dired-omit-files
                (concat dired-omit-files "\\|^\\..+$"))

     in the ‘dired-load-hook’ (*note Installation::).  (Of course, a
     better way to achieve this particular goal is simply to omit ‘-a’
     from ‘dired-listing-switches’.)



#+END_SRC
