






특히




** 문맥org모듈노트+<el탭_yasnippet_emacs_내부노트>_초소형_간이모듈
- 주사용처_복사범위(*부터 -:end: -:End: -:END: 까지들 중 필요부분복사) Copy로 사용시 위의 *제목을 수정하고 나머지줄은몽땅삭제할 것
- diary.org_C-[ C-[ 1 등록시에는 -:end: 부분을 등록함 wish_list_test.org의 경우는 나중에 일과종료전까지 보낸다.
:F10을기억하고_누르고즉시관찰실험하라!:
#+begin_text org :최종목적은_syntax양식의 암기없이 흐름을 만듬이다
- 상황성립배경{주된목적_meta사고, 상위프로젝트위치, 그 문맥배경설명요약}:
 [2020-03-21 Sat]  로딩파일의 문제를 해결하면서 이것이 정상적으로 기동하게 되었다.
          그래서인지 원인을 몰랐지만 <s탭의 자동완성이 작동되지 않았다.
- yasnippet 발견 F10자주 참조할 것. file:yasnippet.org
다시 F10 → YASnippet → org-mode에서 재발견한 기능에 감탄함.

- 목적기여_강점: 
- 주저장파일 (buffer-file-name) file:../../app/emacs/yasnippet.org (buffer-name) 
- 현재위치기록 (buffer-file-name) file:../../app/emacs/emacs_is_great.org
- 전파필요한 직접연관파일(단련리스트파일, 인박스수집): file:../../app/emacs/emacs_is_great.org
- 관련임시아이디어들 경쟁,대안 : 
- 등록할 성과요약문 연관파일과 다이어리에 기재사항
  - 

- 더 필요하고 조사해야할 사안 그리고 대기중, 중단이유:
  - ipython session!, python
  - # config_github/ emacs/ language/pyton 등 폴더내부에 파일로  ln -fs로 연동해서 사용하는 방법을 고려할 것
   → 즉, 파일정보를 관리하는 것을 한 곳에서 수행하는 방식: 별도 외부폴더를 정리하는 것보다 언어와 노트 스니핏이 한 곳에서 저장한다.
  - file:~/.emacs.d/snippets/org-mode/emacs-lisp

-#+end_text org
-:end:

#+begin_center text emacs-lisp :불타는_핵심부은_공명진동한다이다
; 핵심을 강화하는 문맥에 연관은 집중적인 추론으로 중요하다.

#+end_center
-#+end_text org
-:END:

- [ ] 구조파악할 것 ← 내부구조가 정확해야 활용을 높일수 있다
  #+begin_src sh :results table
  # 서열의 순서파악함. * > : > #+오그 > - [ ] > #+src
  ; 발굴되기 전에는 모든 것이 모르는 것이다!
  
  #+end_src
  #+RESULTS:

  #+begin_src elisp :results table

  ;(indent-region START END &optional COLUMN)
  #+end_src
  #+RESULTS:


#+begin_src emacs-lisp

#+end_src
#+RESULTS:

#+end_text
다음엔 어디로?
: 
:end:

 



#+begin_src ipython :session session01 :file ./ipython-nzKxMv.png :exports both
ㅇ

ㅁㄴㅇㄹ

#+end_src
