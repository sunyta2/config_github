
* 람다함수를 이용하여 여러명령을 수행함

(anonymous COMMAND)
#+begin_src emacs-lisp
  ;; 성공적인 함수명없는 전달!!! el 파일에서 [ [ 1 파일빠르게 열기커맨드지정불요함 ]] global-set-key.org read-shell-command.org
  (global-set-key (kbd "s-$")
                  '(lambda (command)
                     (interactive (list (read-shell-command "$ "))) (start-process-shell-command command nil command))
                  )
#+end_src
help:read-shell-command
(read-shell-command "hi " "good day")
help:read-from-minibuffer (


#+BEGIN_SRC emacs-lisp
;; 람다를 이용하면 함수를 임시로 생성해서 저장할 수 있다
    ;; M-d를 변경하는 것을 연구하려했음.
                ;; (describe-key [8388646] 1 nil) (start-process-shell-command "돌핀" nil "dolphin")
(global-set-key [24 C-backspace] ; C-x C-backspace
                (lambda () (interactive)
                  (save-excursion
                    (backward-word)
                    (kill-word 1)
                    (yank))))
#+END_SRC



#+begin_src emacs-lisp :results silent
;;;;;;;;;; esc_esc_num ;;;;;;;;;;;;;;;;
  (global-set-key (kbd "ESC ESC 1")
                  '(lambda ()
                    (interactive)
                    (find-file "/home/thinkpad/config_github/app/emacs/04diary2020.org")
                   )
  )

  (global-set-key (kbd "ESC ESC 2")
                  '(lambda ()
                    (interactive)
                    (find-file "~/Desktop/pdf_list_of_desktop.org")
                   )
  )

  (global-set-key (kbd "ESC ESC 3")
                  '(lambda ()
                    (interactive)
(find-file "/home/thinkpad/config_github/great_books/vitruvius/de_architectura/de_architectura_liber01_03.org")
                   )
  )

  (global-set-key (kbd "ESC ESC 4")
                  '(lambda ()
                    (interactive)
                    (find-file "~/Music/_1_bbg_playlist.org")
                   )
  )

  (global-set-key (kbd "ESC ESC 5")
                  '(lambda ()
                    (interactive)
                    (find-file "~/config_github/app/emacs/esc_esc_num.org")
                   )
  )

  (global-set-key (kbd "ESC ESC 6")
                  '(lambda ()
                    (interactive)
                    (find-file "/home/thinkpad/config_github/app/emacs/04diary2020.org")
                   )
  )
;;;;;;;;;; esc_esc_num ;;;;;;;;;;;;;;;;
(defun exwm-mode-line-ljp ()
(interactive)

(setq mode-line-format 
'("%e"
 (:eval
  (format "[%d]"
	  (exwm-workspace--position exwm-workspace--current)  )) ;; EXWM mode-line
 mode-line-front-space mode-line-mule-info mode-line-client mode-line-modified mode-line-remote mode-line-frame-identification mode-line-buffer-identification "   " mode-line-position
 (vc-mode vc-mode)
 "  " mode-line-modes mode-line-misc-info mode-line-end-spaces)
)
)

;;;;;;;;;; esc_esc_num ;;;;;;;;;;;;;;;;
(defun esc_esc_1 ()
(interactive)
(find-file "/home/thinkpad/config_github/app/emacs/04diary2020.org")
)
(global-set-key (kbd "ESC ESC 1")
'esc_esc_1)

(defun esc_esc_2 ()
(interactive)
(find-file "~/Desktop/pdf_list_of_desktop.org")
)
(global-set-key (kbd "ESC ESC 2")
'esc_esc_2)

(defun esc_esc_3 ()
(interactive)
(find-file "/home/thinkpad/config_github/great_books/vitruvius/de_architectura/de_architectura_liber01_03.org")
)
(global-set-key (kbd "ESC ESC 3")
'esc_esc_3)


(defun esc_esc_4 ()
(interactive)
(find-file "~/Music/_1_bbg_playlist.org")
)
(global-set-key (kbd "ESC ESC 4")
'esc_esc_4)

(defun esc_esc_5 ()
(interactive)
(find-file "~/config_github/app/emacs/esc_esc_num.org")
)
(global-set-key (kbd "ESC ESC 5")
'esc_esc_5)
;;;;;;;;;; esc_esc_num ;;;;;;;;;;;;;;;;

#+end_src


#+begin_src sh :results silent
espeak -a 20 -v other/la "amare"
#+end_src


** 다중함수를 실행하는 방법이 있었음 (prgn ~~~~) ?
