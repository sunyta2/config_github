-*- coding: utf-8 -*-
#+STARTUP: showeverything indent
#+TITLE:


info:gawk#Top
info:sed#Top
info:grep#Top




#+BEGIN_SRC sh
ls -l | grep -v \~ | awk '{ print $9 " " $9}' ##; 가장 기초가 가장 중요하다.
ls -l  | grep -v "[\#|\~]" | awk '{ print $9 " " $9}' ##; 가장 기초가 가장 중요하다. awk/readme.org

 acpi -b | awk '{print "[" $3, $4, $5 "]"}'
=> [Discharging, 87%, 03:30:34]

#+END_SRC

#+RESULTS:
|                                 |                                 |
| reading_stuff_awk_note_test.org | reading_stuff_awk_note_test.org |
| #readme.org#                    | #readme.org#                    |
| readme.org                      | readme.org                      |
|                                 |                                 |
| reading_stuff_awk_note_test.org | reading_stuff_awk_note_test.org |
| readme.org                      | readme.org                      |



#+BEGIN_SRC sh
  #which zenity

  rotate_state="normal_testing"

  rotate_state="$(zenity --entry --entry-text="Type" \
  --text="current rotate state is $rotate_state \nl(eft),r(ight),i(nvert)\n new line\nother line.")"
  case $rotate_state in
	   l* | L*)
	       echo "left"
	       echo "left"
#	xinput set-prop 'Synaptics TM3053-003' "Device Enabled" 1 # 트랙패드 가능하게함(0는 사용중지시킴). 원래값:1
	xinput set-prop 'Synaptics TM3053-003' --type=float "Coordinate Transformation Matrix" 0 -1 1 1 0 0 0 0 1
	# 트랙포인터만 돌리는 것으로 실험함. id=17
	## 화면돌리기 부터실험함.
	xrandr -o left
	## 마우스 트랙포인터만 돌리기
	xinput set-prop 'TPPS/2 IBM TrackPoint' --type=float "Coordinate Transformation Matrix" 0 -1 1 1 0 0 0 0 1
#	xinput map-to-output 17 eDP-1 # 17 is TPPS/2 IBM TrackPoint
#	xinput set-prop 'USB Optical Mouse' --type=float "Coordinate Transformation Matrix" 0 -1 1 1 0 0 0 0 1
#	xinput map-to-output 12 eDP-1 # 12 is USB Optical Mouse

	       ;;
	   r* | R*)
	       echo "right"
	       echo "right"
	     
#	xinput set-prop 'Synaptics TM3053-003' "Device Enabled" 1 # 트랙패드 가능하게함(0는 사용중지시킴). 원래값:1
	xinput set-prop 'Synaptics TM3053-003' --type=float "Coordinate Transformation Matrix" 0 1 0 -1 0 1 0 0 1
	# 트랙포인터만 돌리는 것으로 실험함. id=17
	## 화면돌리기 부터실험함.
	xrandr -o right
	## 마우스 트랙포인터만 돌리기
	xinput set-prop 'TPPS/2 IBM TrackPoint' --type=float "Coordinate Transformation Matrix" 0 1 0 -1 0 1 0 0 1
#	xinput map-to-output 17 eDP-1 # 17 is TPPS/2 IBM TrackPoint
#	xinput set-prop 'USB Optical Mouse' --type=float "Coordinate Transformation Matrix" 0 1 0 -1 0 1 0 0 1
#	xinput map-to-output 12 eDP-1 # 12 is USB Optical Mouse

	       ;;
	   i* | I*)
	       echo "inverted"
	       echo "inverted"
	xinput set-prop 'Synaptics TM3053-003' --type=float "Coordinate Transformation Matrix" -1 0 1 0 -1 1 0 0 1
	# 트랙포인터만 돌리는 것으로 실험함. id=17
	## 화면돌리기 부터실험함.
	xrandr -o inverted
	## 마우스 트랙포인터만 돌리기
	xinput set-prop 'TPPS/2 IBM TrackPoint' --type=float "Coordinate Transformation Matrix" -1 0 1 0 -1 1 0 0 1
#	xinput map-to-output 17 eDP-1 # 17 is TPPS/2 IBM TrackPoint
#	xinput set-prop 'USB Optical Mouse' --type=float "Coordinate Transformation Matrix" -1 0 1 0 -1 1 0 0 1
#	xinput map-to-output 12 eDP-1 # 12 is USB Optical Mouse
	     
	       ;;
#	   d* | D*)
#	       echo "deactivate_keyboard"
#	       echo "deactivate_keyboard"
#	     
#	       ;;
	   *)
	xinput set-prop 'Synaptics TM3053-003' --type=float "Coordinate Transformation Matrix" 1 0 0 0 1 0 0 0 1
	# 트랙포인터만 돌리는 것으로 실험함. id=17
	## 화면돌리기 부터실험함.
	xrandr -o normal
	## 마우스 트랙포인터만 돌리기
	xinput set-prop 'TPPS/2 IBM TrackPoint' --type=float "Coordinate Transformation Matrix" 1 0 0 0 1 0 0 0 1
#	xinput map-to-output 17 eDP-1 # 17 is TPPS/2 IBM TrackPoint
#	xinput set-prop 'USB Optical Mouse' --type=float "Coordinate Transformation Matrix" 1 0 0 0 1 0 0 0 1
#	xinput map-to-output 12 eDP-1 # 12 is USB Optical Mouse

  esac


#+END_SRC

#+RESULTS:
#+BEGIN_SRC sh
which sh
#+END_SRC

#+RESULTS:
: /usr/bin/sh

#+BEGIN_SRC sh
#xinput -
#echo hi
#xrandr -q | awk '$1 == "eDP-1" {print $5}'
rotate_state=$(xrandr -q | awk '$1 == "eDP-1" {print $5}')
#| awk -v FS="*0" 'NF>1{print $2}'
echo " This is state of rotation : $rotate_state"
# | awk -v FS="(0+0|\(normal)" 'NF>1{print $2}' 특수키입력연구해야 된다.



#+END_SRC

#+RESULTS:
: This is state of rotation : right


*** note of awk command example
#+BEGIN_SRC sh
#노트한 것으로 수정하여서 다시정리할 것
echo ... | awk -v FS="(<key>|<key>)" 'MF >'{print $2}'
           awk '{if ($2 ~ /find_text/) print $3}' <in_file>
           awk '$2 == "find_text"  {print $5}'
           awk '$2 ~ "find_text"  {print $5}'
           awk '$1 == "eDP-1"  {print $5}'
#노트한 것으로 수정하여서 다시정리할 것
#+END_SRC


* dwm의 머릿부분이 시작되는 것을 참고로 하면 깔끔할 것이다.
** 연관 ~/.bin/start , app/awk/readme.org shell/variable~.org app/xrandr/rotate
#+BEGIN_SRC sh
function xsetroot_bar_info {
	s_char='/'
	bar_mem="$(free -h | awk '/^Mem:/ {print $3 $2}')"
	bar_tmp="$(sensors | awk '/^fan/ {getline; print $2}')"
	bar_total=" $bar_tmp $bar_mem $(battery)% $( date +'%F(%a%W/52)%p %R' )~ $i/15m "
#bar_total=1
}
    # (find-file "~/.bin/start") :76: M-gM-g 76 C-m
#+END_SRC
** 활용처: rotate에서 깔끔하게 xrandr -q를 사용하여 이용하는 것에 적용할 것.
    - 즉, 자동으로 이용하는 방식을 이용하는 것이 중요한 것이다.
